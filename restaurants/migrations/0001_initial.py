# Generated by Django 5.2.3 on 2025-07-11 06:09

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu/categories/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Menu Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('cuisine_type', models.CharField(max_length=50)),
                ('price_range', models.CharField(max_length=10)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('delivery_radius', models.FloatField(default=5.0)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=2.99, max_digits=10)),
                ('minimum_order', models.DecimalField(decimal_places=2, default=15.0, max_digits=10)),
                ('service_areas', models.JSONField(blank=True, default=dict)),
                ('primary_phone', models.CharField(max_length=20)),
                ('secondary_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('social_media', models.JSONField(blank=True, default=dict)),
                ('contact_person', models.JSONField(blank=True, default=dict)),
                ('emergency_contact', models.JSONField(blank=True, default=dict)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurant/logos/')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='restaurant/banners/')),
                ('brand_colors', models.JSONField(blank=True, default=dict)),
                ('tagline', models.CharField(blank=True, max_length=200, null=True)),
                ('story', models.TextField(blank=True, null=True)),
                ('specialties', models.JSONField(blank=True, default=dict)),
                ('tags', models.JSONField(blank=True, default=dict)),
                ('special_diets', models.JSONField(blank=True, default=dict)),
                ('accessibility_features', models.JSONField(blank=True, default=dict)),
                ('parking_available', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_open', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='restaurant/menu_items/')),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('preparation_time', models.PositiveIntegerField(blank=True, help_text='Preparation time in minutes', null=True)),
                ('ingredients', models.TextField(blank=True, help_text='List of ingredients', null=True)),
                ('allergens', models.TextField(blank=True, help_text='Allergen information', null=True)),
                ('calories', models.PositiveIntegerField(blank=True, help_text='Calorie count', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='restaurants.menucategory')),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='restaurants.menu')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='restaurants.restaurant')),
            ],
            options={
                'ordering': ['category__order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='restaurant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='restaurants.restaurant'),
        ),
        migrations.CreateModel(
            name='RestaurantDeliveryHours',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('is_available', models.BooleanField(default=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_hours', to='restaurants.restaurant')),
            ],
            options={
                'ordering': ['day_of_week'],
                'unique_together': {('restaurant', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='RestaurantOperatingHours',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('is_open', models.BooleanField(default=True)),
                ('open_time', models.TimeField(blank=True, null=True)),
                ('close_time', models.TimeField(blank=True, null=True)),
                ('has_break', models.BooleanField(default=False)),
                ('break_start', models.TimeField(blank=True, null=True)),
                ('break_end', models.TimeField(blank=True, null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_hours', to='restaurants.restaurant')),
            ],
            options={
                'ordering': ['day_of_week'],
                'unique_together': {('restaurant', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='RestaurantReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='restaurants.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('restaurant', 'user')},
            },
        ),
    ]
