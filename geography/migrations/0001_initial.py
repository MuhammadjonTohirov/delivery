# Generated by Django 5.0.1 on 2025-06-06 04:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('restaurants', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeocodingCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_hash', models.CharField(max_length=64, unique=True)),
                ('original_address', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('formatted_address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('provider', models.CharField(blank=True, max_length=50, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('is_exact_match', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['address_hash'], name='geography_g_address_8966b0_idx'), models.Index(fields=['latitude', 'longitude'], name='geography_g_latitud_1a5d0b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('center_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('center_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('radius_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('launch_date', models.DateField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('min_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('max_delivery_distance_km', models.DecimalField(decimal_places=2, default=10, max_digits=5)),
                ('average_delivery_time_minutes', models.IntegerField(default=35)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active'], name='geography_s_is_acti_33fd38_idx'), models.Index(fields=['center_latitude', 'center_longitude'], name='geography_s_center__26651f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('street_address', models.CharField(max_length=200)),
                ('apartment_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('delivery_instructions', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_default', '-created_at'],
                'indexes': [models.Index(fields=['user', 'is_default'], name='geography_a_user_id_20cf75_idx'), models.Index(fields=['latitude', 'longitude'], name='geography_a_latitud_2cb9a3_idx'), models.Index(fields=['city', 'state'], name='geography_a_city_040c8d_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeliveryRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('estimated_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('actual_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('route_waypoints', models.JSONField(blank=True, default=list)),
                ('optimization_algorithm', models.CharField(default='nearest_neighbor', max_length=50)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PLANNED', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_routes', to='users.driverprofile')),
                ('orders', models.ManyToManyField(related_name='delivery_routes', to='orders.order')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['driver', 'status'], name='geography_d_driver__5ea137_idx'), models.Index(fields=['status', 'created_at'], name='geography_d_status_a54ecc_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeliveryZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('center_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('center_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('radius_km', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('base_delivery_fee', models.DecimalField(decimal_places=2, default=2.5, max_digits=6)),
                ('per_km_fee', models.DecimalField(decimal_places=2, default=0.5, max_digits=4)),
                ('estimated_delivery_time_minutes', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1)),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_zones', to='restaurants.restaurant')),
            ],
            options={
                'ordering': ['-priority', 'name'],
                'indexes': [models.Index(fields=['restaurant', 'is_active'], name='geography_d_restaur_601578_idx'), models.Index(fields=['center_latitude', 'center_longitude'], name='geography_d_center__c3ddb3_idx')],
            },
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('activity_type', models.CharField(choices=[('IDLE', 'Idle'), ('DRIVING', 'Driving'), ('WALKING', 'Walking'), ('PICKUP', 'At Pickup Location'), ('DELIVERY', 'At Delivery Location')], default='IDLE', max_length=20)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='orders.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='geography_l_user_id_cdfd75_idx'), models.Index(fields=['order', 'created_at'], name='geography_l_order_i_77b40a_idx'), models.Index(fields=['latitude', 'longitude'], name='geography_l_latitud_c9f4de_idx')],
            },
        ),
    ]
